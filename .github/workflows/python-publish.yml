# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    # Set up the python version in this case above python 3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    # Install necessary packages.
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine, flake8, pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi      
    
    # Checking for Python syntax errors beofre uploading to pypi
    - name: Lint with flake8
      run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    # Testing all tests before uploading to pypi
    - name: Testing with pytest
      run: |
          pytest
      
    # Build and Publish the package to pypi
    - name: Build and publish
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
